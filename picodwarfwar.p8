pico-8 cartridge // http://www.pico-8.com
version 16
__lua__
--pico dwarf war
--by sasha bilton
	
	game={}
	game.state = 1
	game.cursor = {}
	game.cursor.x = 8
	game.cursor.y = 8
	game.cursor.inc = 8
	game.dx =0 --world view delta change
	game.dy =0 
	game.timer = 1
   game.tick = 1
   game.msg = "hello world"
   game.selected_structure = nil

	sprites = {}
	structures ={}
	totals = {
		resources = {
			food = 0,
			stone = 0,
			wood = 0,
			iron = 0
		}
	}

	function _init( ... )
		printh("initialising", "log.txt", true)
		create_initial_castle()
		--new_sprite(16,16,10,{41,42,43}, 1, 0, 0) -- test animations are working
		calculate_total()
	end
	
	function _update()
  		if (game.state == 1) then map_select() end
	end

	function _draw()
		cls()
		if (game.state == 1) then draw_map_view() end
	end

	--init functions
	function create_initial_castle()
		local castle = {
		x = 8,
		y = 3,
		build = 1, -- castle
		owner = 1, --player
		spr = 18, --sprite to display
		resources = {
			food = 0,
			stone = 0,
			wood = 0,
			iron = 0
			}	
		}
		castle.name = random_castle()
		add (structures, castle)

		local castle2 = {
		x = 5,
		y = 7,
		build = 1, -- castle
		owner =1,
		spr = 18,
		resources = {
			food = 0,
			stone = 0,
			wood = 0,
			iron = 0
			}	
		}
		castle2.name = random_castle()
		add (structures, castle2)
		log("castle")
		log(structures[1].name.." "..structures[1].x.."/"..structures[1].y)
		log("castle2")
		log(structures[2].name.." "..structures[2].x.."/"..structures[2].y)
	end

	--update functions
	function map_select()
		update_timer()
		foreach(sprites, update_sprite)
  		if (btnp(0)) then game.cursor.x-=1 end
	 	if (btnp(1)) then game.cursor.x+=1 end
	 	if (btnp(2)) then game.cursor.y-=1 end
	 	if (btnp(3)) then game.cursor.y+=1 end

   if (game.cursor.x<0) then 
    game.cursor.x=0 
    if (game.dx >0 ) then game.dx-=1 end
   end
   if (game.cursor.y<0) then 
    game.cursor.y=0 
    if (game.dy >0 ) then game.dy-=1 end
   end
   if (game.cursor.x>9) then 
    game.cursor.x=9 
    if (game.dx <32 ) then game.dx+=1 end
   end
   if (game.cursor.y>9) then 
    game.cursor.y=9 
    if (game.dy <32 ) then game.dy+=1 end
   end


	end

	--draw functions
	function draw_map_view( ... )
		game.msg = ""
		map(game.dx,game.dy,0,0,10,10)
		foreach(sprites, sprite_draw)
		foreach(structures, draw_structures)
		spr(32, game.cursor.x*game.cursor.inc, game.cursor.y*game.cursor.inc)
		draw_message_box()
		draw_message()
		draw_info_box()
	end

	function draw_structures( structure )
		spr(structure.spr, structure.x*8 - game.dx*8, structure.y*8 - game.dy*8)
		rect((structure.x*8)-1 - game.dx*8,(structure.y*8)-1- game.dy*8, (structure.x*8)+7- game.dx*8, (structure.y*8)+7- game.dy*8,8) 
	
		if (game.cursor.x+ game.dx == structure.x and game.cursor.y+game.dy == structure.y) then
			game.msg = structure.name.." "..structure.x.."/"..structure.y
			log("str "..structure.name..structure.x.."/"..structure.y)
			game.selected_structure = structure
		end
	end

	function draw_message_box()
		rect(0,81,127,127,2)
	end

	function draw_message()
		print(game.msg, 2,83, 5)
	end

	function draw_info_box()
		rect(80,0,127,81,2)
		spr(50, 81,0)
		print(totals.resources.food, 90,2,5)
		spr(48,81,8)
		print(totals.resources.iron, 90,9,5)
		spr(49,81,15)
		print(totals.resources.stone, 90, 17, 5)
		spr(51,81,23)
		print(totals.resources.wood, 90, 25, 5)
	end

--
-- sprite code
--
function new_sprite(x1, y1,tick, list, active, oneshot, move)
 s = {}
 s.x = x1
 s.y = y1
 s.list = list
 s.current = 1
 s.tick = tick -- change sprite frame every n refreshes (max 60)
 s.active = active -- is the sprite active?
 s.oneshot = oneshot -- does the sprite die 
 s.first_update = 1 -- marks the sprite as fresh
 s.move = move -- sprite moves
 add (sprites, s)
 return s
end


function sprite_draw(sprite)
  if (sprite.active == 1) then
    spr(sprite.list[sprite.current],sprite.x,sprite.y)

  end
end

function update_sprite(sprite)
  if (sprite.active ==1) then
    if (sprite.first_update !=1 
      and sprite.move == 1 ) then
    sprite.x -= game.dx*8
    sprite.y -= game.dy*8
    sprite.first_update = 0
  else
    sprite.first_update = 0
  end
 -- check to see if we're on a tick
 if (game.timer % sprite.tick == 1) then
  if (sprite.current < #sprite.list) then
    sprite.current+=1
  else
    sprite.current =1
    if (sprite.oneshot == 1) then
      del(sprites,sprite)
    end
  end
 end
end
end

function update_timer()
  game.timer+=1
  if (game.timer>60) then
    game.timer = 1
  end

end

--
-- end of sprite code
--

-- name gen code

function random_castle()
	local a = {"khaz", "dur", "dun", "kharak","cral"}
	local b = {"zog", "dum", "dag", "kar", "vog", "hurn"}
	local c = {"dehad","gordum","fast","fort", "hold" }
	local i1 = flr(rnd(#a-1))+1
	local i2 = flr(rnd(#b-1))+1
	local i3 = flr(rnd(#c-1))+1
	local s = a[i1]..b[i2]..c[i3]
	game.msg = s
	return s
end

function log(msg)
	printh(time()..":"..msg, "log.txt")
end

function calculate_total()
	foreach(structures, structure_resources)
	foreach(structures, total_resources)
end

function structure_resources(structure)

	for lx = structure.x-1, structure.x+1 do
		for ly = structure.y-1, structure.y+1 do

			local loc = mget(lx,ly)
			-- 1 = plains, 2 = forest, 3= farmland, 4=hills, 5=mountains, 6=sea, 9= faerie ring, 10= cave 
			-- calculate surround resources
    structure.resources.food +=1 -- everything gives at least 1 food
    if (loc == 1) then
      structure.resources.food +=1
      structure.resources.wood +=1
     elseif (loc == 2) then
       structure.resources.wood +=3
     elseif (loc==3) then
      structure.resources.food +=2
     elseif (loc==4) then
      structure.resources.iron +=2
      structure.resources.stone +=1
     elseif (loc==5) then
      structure.resources.iron +=1
      structure.resources.stone +=3
     elseif (loc==6) then
      structure.resources.food +=2
     end
		end
	end
end

function total_resources(structure)
	if (structure.owner==1) then
		totals.resources.food += structure.resources.food
		totals.resources.stone += structure.resources.stone
		totals.resources.iron += structure.resources.iron
		totals.resources.wood += structure.resources.wood
	end
end


__gfx__
00000000b3bbb3b0bbbbbbb0bbbbbbb09999999066666660ccccccc00000000000000000b3bbbbb0666666600000000000000000000000000000000000000000
00000000bbbbbbb0bb333bb0b9b9b9b099999990666566607cccccc00000000000000000bb7eeeb0666566600000000000000000000000000000000000000000
00700700bbbb3bb0b33333b0b9b9b9b09944499066575660cc7cc7c00000000000000000beee7e70665756600000000000000000000000000000000000000000
00077000bb3bbbb0bb333bb0bababab094a9449065777560ccccccc00000000000000000bbb99bb0656655600000000000000000000000000000000000000000
00077000bbbbb3b0bbb4bbb0bababab04a99944065665560cccccc7000000000000000003bbffbb0656565600000000000000000000000000000000000000000
007007003bbbbbb0b3b4b3b0bababab09999999056665550c7ccccc00000000000000000bbbffbb0566565500000000000000000000000000000000000000000
00000000bbbb3bb0bbbbbbb0bbbbbbb09999999066666660cccc7cc00000000000000000bbbbbb30666666600000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000022000000550000000000000055000000110000005500000000000000000000000000000000000000000000000000000000000
00000000000000000000000000222200000ff00000055000000bb00000155100000ff000000dd000000000000000000000000000000000000000000000000000
0006500000022000020220200008800000844200000ff00000bbb300001bb10000544545000fff04000000000000000000000000000000000000000000000000
0066550000222200022222200008200008082080008882000b0b30b001bbb310011555400009a004000000000000000000000000000000000000000000000000
000fd0000008800000888800000880000008200008082080000b30001b1b31b1011dd0f00f999904000000000000000000000000000000000000000000000000
000fd000000880000082880000082000008002000088820000b0030001bbb310000550000009a0f4000000000000000000000000000000000000000000000000
0000000000000000000000000008800008200820008002000bb00b3001b11310005005000099aa04000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000001001000050050000f00f04000000000000000000000000000000000000000000000000
aa0000aa0000000000000000000000d0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
a000000a0000000000d0000000000dd0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000dd000000000dd00000000000000000000000000000000000000000000088000000000000000000000000000000000000000000000000000
000000000000dd00000d00000d0dd000000000000000000000000000000000000000000000888800000880000000000000000000000000000000000000000000
000000000000dd000000d0d000dd0000000000000000000000000000000000000000000000888800000880000000800000000000000000000000000000000000
0000000000dddd0000000dd00ddd0000000000000000000008000000bbb0000000f0000000088000000000000000000000000000000000000000000000000000
a000000a000000000000ddd0dd00d000000000000000000088800000bbb000000ff0000000000000000000000000000000000000000000000000000000000000
aa0000aa0000000000000000000000000000000000000000080000000b000000fff0000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000030000000999000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
06dddd50006566000084380004999400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0ddddd50056666500888878004445400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0ddddd50065565600888888004544400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0dddd550056656600888888004445400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000005666000008800004544400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000444000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__gff__
0000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0606060606060606060606040606060600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0606060601020201010105060606060600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0606060602020204050505060606060600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0606060102020904050505050606060600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
060601030101040405050a050406060600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0606010404040402050505050404040600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0606010202020202050505040404040600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0606060606020202060504040405020600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0606060606060606060604040402020600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0606060606060606060606060202060600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0606060606060606060606060606060600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__music__
00 01424344

